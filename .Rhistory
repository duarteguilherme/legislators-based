install.packages("readstata13")
BANCONO <- read.csv('~/Downloads/bancono.csv', stringsAsFactors=FALSE)
str(BANCONO)
BANCONO$autor_sobrenome <- gsub(" ", "", BANCONO$autor_sobrenome)
BANCONO$autor_sobrenome <- toupper(BANCONO$autor_sobrenome)
library(dplyr)
mutate(BANCONO, autor_key = paste0(autor_sobrenome, ano))
BANCONO <- mutate(BANCONO, autor_key = paste0(autor_sobrenome, ano))
getwd()
table(BANCONO$autor_key)
length(table(BANCONO$autor_key))
write.csv(BANCONO, "bancono.csv", row.names=FALSE)
library(tidyr)
install.packages('scholar')
library(rvest)
pagina <- read_html("https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=2014&as_yhi=2014")
html_text(html_node(pagina, css="#gs_ab_md"))
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
i <- 1990
dados$ano==i
?Sys.sleep(1)
?Sys.sleep(5)
?Sys.sleep(2000)
?Sys.sleep(3000)
Sys.sleep(3)
Sys.sleep(1)
library(rvest)
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
dados$judicilizacao[dados$ano==i] <- html_text(html_node(pagina, css="gs_ab_md"))
Sys.sleep(10)
}
?try
pagina
valor <- try(html_text(html_node(pagina, css="gs_ab_md")), TRUE)
valor
length(valor)
class(valor)
valor[1]
grep(valor[1], "Error")
grep("Error",valor[1])
str_detect(valor[1], "Error")
library(stringr)
str_detect(valor[1], "Error")
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error"==TRUE) {
dados$judicializacao[dados$ano==i] <- 0
}
else {
dados$judicializacao[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
i
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="gs_ab_md")), TRUE)
str_detect(valor[1], "Error")
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$judicializacao[dados$ano==i] <- 0
}
else {
dados$judicializacao[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
url
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$judicializacao[dados$ano==i] <- 0
}
else {
dados$judicializacao[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
dados <- data.frame(anos=1990:2014)
dados$judicializacao <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=judicializa%C3%A7%C3%A3o&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$judicializacao[dados$ano==i] <- 0
}
else {
dados$judicializacao[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
html_text(html_node(pagina, css="#gs_ab_md"))
dados
backup <- dados
dados$judicializacao <- gsub("About ", "", dados$judicializacao)
dados$judicializacao
dados$judicializacao <- gsub(" results", "", dados$judicializacao)
dados$judicializacao <- gsub("\([:print:]*", "", dados$judicializacao)
write.csv(dados, "dados.csv", row.names=FALSE)
dados$judicializacao <- gsub("\(0.01 sec\)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("\\(\\)", "", dados$judicializacao)
dados$judicializacao
dados$judicializacao <- gsub("result", "", dados$judicializacao)
dados$judicializacao <- gsub("results", "", dados$judicializacao)
dados$judicializacao <- gsub("result", "", dados$judicializacao)
dados$judicializacao <- gsub("\\(\\)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.01 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.02 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.03 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.04 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.05 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.06 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.07 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.08 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub("(0.09 sec)", "", dados$judicializacao)
dados$judicializacao <- gsub(" ", "", dados$judicializacao)
dados$judicializacao
dados$judicializacao <- gsub("\\(\\)", "", dados$judicializacao)
dados$judicializacao
dados$judicializacao <- gsub(",", "", dados$judicializacao)
dados$judicializacao <- as.numeric(dados$judicializacao)
dados$judicializacao
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
qplot(ano, judicializacao, data=dados, geom="line" )
dados
qplot(anos, judicializacao, data=dados, geom="line" )
qplot(anos, judicializacao, data=dados, geom="line", xlab="Ano", ylab="Citações")
qplot(anos, judicializacao, data=dados, geom="line", xlab="Ano", ylab="Citações") + theme_bw()
dados$justica_eleitoral <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=justiça+eleitoral&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$justica_eleitoral[dados$ano==i] <- 0
}
else {
dados$justica_eleitoral[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
print(i)
url <- "https://scholar.google.com.br/scholar?q=justiça+eleitoral&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
url
html(url)
read_html(url)
dados$justica_eleitoral <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=justiça+eleitoral&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$justica_eleitoral[dados$ano==i] <- 0
}
else {
dados$justica_eleitoral[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=justica+eleitoral&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$justica_eleitoral[dados$ano==i] <- 0
}
else {
dados$justica_eleitoral[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
dados$justica_eleitoral <- NA
for (i in 1990:2014) {
print(i)
url <- "https://scholar.google.com.br/scholar?q=justica+eleitoral&hl=en&as_sdt=0%2C5&as_ylo=XXX&as_yhi=XXX"
url <- gsub("XXX", i, url)
pagina <- read_html(url)
valor <- try(html_text(html_node(pagina, css="#gs_ab_md")), TRUE)
if ( str_detect(valor[1], "Error")==TRUE) {
dados$justica_eleitoral[dados$ano==i] <- 0
}
else {
dados$justica_eleitoral[dados$ano==i] <- valor
}
print(valor)
Sys.sleep(10)
}
url
pagina <- read_html(url)
setwd('~/legislators-based/')
source('dados.R')
# source('beta.R')
library(rstan)
yy <- matrix(NA, ncol=3, nrow=48600)
colnames(yy) <- c("n","k","y")
control <- 1
for (i in 1:100) {
for (j in 1:486) {
yy[control,1] <- i
yy[control,2] <- j
yy[control,3] <- y[i,j]
control <- control + 1
}
}
yy <- data.frame(yy)
yy <- na.omit(yy)x
K <- length(unique(yy$k))
L <- length(unique(yy$n))
data = list(N=nrow(yy), L=L, K=K, jj=yy$n, kk=yy$k, y=yy$y)
stanstr <-
'
data {
int<lower=0> N;
int<lower=0> L; // legisladores
int<lower=0> K; // rollcalls
int<lower=0> jj[N];
int<lower=0> kk[N];
int<lower=0, upper=1> y[N];
}
parameters {
real beta0[K];
real beta1[K];
vector[L-2] z;
}
transformed parameters {
vector[L] x;
for (i in 1:40) x[i] <- z[i];
for (i in 42:65) x[i] <- z[i-1];
for (i in 67:100) x[i] <- z[i-2];
x[41] <- 1;
x[66] <- -1;
}
model {
for (i in 1:N){
y[i] ~ bernoulli(Phi_approx(x[jj[i]]*beta1[kk[i]] - beta0[kk[i]]));
}
beta1 ~ normal(0, 1);
beta0 ~ normal(0, 1);
z ~ normal(0,1);
}
'
fit <- stan(model_code = stanstr, data=data, iter=12000, warmup=2000, thin=10, chains=3)
yy <- matrix(NA, ncol=3, nrow=48600)
colnames(yy) <- c("n","k","y")
control <- 1
for (i in 1:100) {
for (j in 1:486) {
yy[control,1] <- i
yy[control,2] <- j
yy[control,3] <- y[i,j]
control <- control + 1
}
}
yy <- data.frame(yy)
yy <- na.omit(yy)x
K <- length(unique(yy$k))
L <- length(unique(yy$n))
data = list(N=nrow(yy), L=L, K=K, jj=yy$n, kk=yy$k, y=yy$y)
yy <- na.omit(yy)
stanstr <-
'
data {
int<lower=0> N;
int<lower=0> L; // legisladores
int<lower=0> K; // rollcalls
int<lower=0> jj[N];
int<lower=0> kk[N];
int<lower=0, upper=1> y[N];
}
parameters {
real beta0[K];
real beta1[K];
vector[L-2] z;
}
transformed parameters {
vector[L] x;
for (i in 1:40) x[i] <- z[i];
for (i in 42:65) x[i] <- z[i-1];
for (i in 67:100) x[i] <- z[i-2];
x[41] <- 1;
x[66] <- -1;
}
model {
for (i in 1:N){
y[i] ~ bernoulli(Phi_approx(x[jj[i]]*beta1[kk[i]] - beta0[kk[i]]));
}
beta1 ~ normal(0, 1);
beta0 ~ normal(0, 1);
z ~ normal(0,1);
}
'
fit <- stan(model_code = stanstr, data=data, iter=12000, warmup=2000, thin=10, chains=3)
data = list(N=nrow(yy), L=L, K=K, jj=yy$n, kk=yy$k, y=yy$y)
data$N
data$y
is.na(data$y)
sum(is.na(data$y))
data = list(N=nrow(yy), L=L, K=K, jj=yy$n, kk=yy$k, y=yy$y)
stanstr <-
'
data {
int<lower=0> N;
int<lower=0> L; // legisladores
int<lower=0> K; // rollcalls
int<lower=0> jj[N];
int<lower=0> kk[N];
int<lower=0, upper=1> y[N];
}
parameters {
real beta0[K];
real beta1[K];
vector[L-2] z;
}
transformed parameters {
vector[L] x;
for (i in 1:40) x[i] <- z[i];
for (i in 42:65) x[i] <- z[i-1];
for (i in 67:100) x[i] <- z[i-2];
x[41] <- 1;
x[66] <- -1;
}
model {
for (i in 1:N){
y[i] ~ bernoulli(Phi_approx(x[jj[i]]*beta1[kk[i]] - beta0[kk[i]]));
}
beta1 ~ normal(0, 1);
beta0 ~ normal(0, 1);
z ~ normal(0,1);
}
'
fit <- stan(model_code = stanstr, data=data, iter=12000, warmup=2000, thin=10, chains=3)
fit
macs <- read.csv('~/Downloads/macs.csv', stringsAsFactors=FALSE)
library(dplyr)
str(macs)
macs <- select(macs, -Numero_ADI)
str(macs)
nrow(macs)
ncol(macs)
macs <- as.vector(macs)
length(macs)
macs
class(macs)
macs <- as.vector(macs)
class(macs)
macs2 <- as.numeric(macs)
table(macs)
macs <- read.csv('~/Downloads/macs.csv', stringsAsFactors=FALSE)
macs <- select(macs, -Numero_ADI)
2^31
teste <- table(macs)
macs2 <- rbind(macs)
str(macs2)
macs2 <- rbind(macs$MAC_1,
macs$MAC_2,
macs$MAC_3,
macs$MAC_4,
macs$MAC_5,
macs$MAC_6,
macs$MAC_7,
macs$MAC_8,
macs$MAC_9,
macs$MAC_10,
macs$MAC_11,
macs$MAC_12,
macs$MAC_13,
macs$MAC_14,
macs$MAC_15,
macs$MAC_16,
macs$MAC_17,
macs$MAC_18)
str(macs2)
macs2 <- c(macs$MAC_1,
macs$MAC_2,
macs$MAC_3,
macs$MAC_4,
macs$MAC_5,
macs$MAC_6,
macs$MAC_7,
macs$MAC_8,
macs$MAC_9,
macs$MAC_10,
macs$MAC_11,
macs$MAC_12,
macs$MAC_13,
macs$MAC_14,
macs$MAC_15,
macs$MAC_16,
macs$MAC_17,
macs$MAC_18)
tabela <- table(macs2)
tabela
porcentagem <- prop.table(table(macs2))
write.csv(porcentagem, "porcentagens-macs.csv")
write.csv(tabela, "tabela-macs.csv")
